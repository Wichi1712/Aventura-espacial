<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_nave</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Varibles de movimiento y energia
image_speed = 0.5;
global.salud = 100;
activo = true;

vspeed = 0;
moveH = 0;    //velocidad horizontal
moveV = 0;    //velocidad vertical
movespeed = 4;  //velocidad de movimiento
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movimiento y disparo
if ( activo = true)
{
    //movimiento horizontal
    key_right = keyboard_check( vk_right);
    key_left = -keyboard_check( vk_left);
    moveX = key_left + key_right;
    moveH = moveX * movespeed; 
    hspeed = +moveH;
    
    //movimiento vertical
    key_down = keyboard_check( vk_down);
    key_up = -keyboard_check( vk_up); 
    moveY = key_down + key_up;
    moveV = moveY * movespeed; 
    vspeed = +moveV;
    
    //LIMITES
    x = clamp(x, 20, room_width - 20);
    y = clamp(y, 20, room_height - 20);
    
    //Disparo
    if( distance_to_object( o_bala)&gt;20){
        if( keyboard_check( ord("A")))
        {
         instance_create(x, y - 10, o_bala);
         o_bala.vspeed =-7;
        }
    }
    //Fin disparo
        
    //cambio de sprite
/*    if (moveH !=0)
    { sprite_index = spr_tanquemove;}
    else{ sprite_index = spr_tanque_stop;}
    
    
    //Disparo
    if( distance_to_object( obj_Ballfire)&gt;30){
        if( keyboard_check( ord("A")))
            {
             instance_create(x, y, obj_Ballfire);
             obj_Ballfire.vspeed =-10;
            }
    }*/
    //Fin disparo
}
else { speed = 0;}//cancelamos velocidad

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
